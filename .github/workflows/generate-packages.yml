name: Generate Packages

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  create-release:
    permissions: write-all
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          draft: 'false'
          prerelease: 'false'
  build-desktop:
    permissions: write-all
    name: Build Release
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    needs: create-release
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-release.outputs.tag_name }}
          repository: '${{ github.repository }}'

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Change wrapper permissions
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew packageDistributionForCurrentOS

      - name: Upload Windows MSI
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build/compose/main/msi
          asset_name: devutils-${{github.ref_name}}.msi
          asset_content_type: application/x-msi

      - name: Upload Debian Package
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build/compose/deb
          asset_name: devutils-${{github.ref_name}}.deb
          asset_content_type: application/x-deb

      - name: Upload MacOS DMG
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build/compose/main/dmg
          asset_name: devutils-${{github.ref_name}}.dmg
          asset_content_type: application/x-apple-diskimage